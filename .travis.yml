language: java

dist: trusty

env:
  global:
    - CODECOV_TOKEN="44fc325e-8b3c-4ee9-94a5-103e17012433"

install: true

stages:
  - name: test
    if: type = pull_request OR type = api OR (branch = mainline AND type = push)
  - name: integration_tests
    if: branch = mainline AND type = push
  - name: acceptence_tests
    if: branch = mainline AND type = push
  - name: tag and deploy
    if: branch = mainline AND type = push

jobs:
  include:
    - stage: test
      name: "Unit Tests Java 8"
      jdk:  oraclejdk8
      install: &build_no_checks
        - mvn install -Dsilent=true -DskipTests=true -Dmaven.javadoc.skip=true -Dchecksyle.skip=true -Dspotbugs.skip=true -Djacoco.skip=true -B dependency:go-offline
      script: &build_with_unittests
        - mvn install -pl \!tests/acceptance-test -P reduce-logging -Djacoco.haltOnFailure=true -o || travis_terminate 1

    - name: "Unit Tests Java 11"
      jdk:  oraclejdk11
      install: *build_no_checks
      script: *build_with_unittests

    - stage: integration_tests
      name: "Integration Tests Java 8"
      jdk:  oraclejdk8
      install: *build_no_checks
      script: mvn verify -pl tests/acceptance-test -P reduce-logging -o || travis_terminate 1

    - name: "Integration Tests Java 11"
      jdk:  oraclejdk11
#      before_install:
#        - rm "${JAVA_HOME}/lib/security/cacerts"
#        - ln -s /etc/ssl/certs/java/cacerts "${JAVA_HOME}/lib/security/cacerts"
      install: *build_no_checks
      script: mvn verify -pl tests/acceptance-test -P reduce-logging || travis_terminate 1

    - name: "Simple Only Integration Tests Java 8"
      jdk:  oraclejdk8
      install: *build_no_checks
      script: mvn verify -pl tests/acceptance-test -P simple-acceptance-tests,reduce-logging -o || travis_terminate 1

    - name: "Vault Integration Tests Java 8"
      jdk:  oraclejdk8
      before_install: &install_hashicorp
        - wget https://releases.hashicorp.com/vault/1.2.2/vault_1.2.2_linux_amd64.zip -O /tmp/vault_1.2.2_linux_amd64.zip
        - mkdir -p vault/bin && pushd $_
        - unzip /tmp/vault_1.2.2_linux_amd64.zip
        - export PATH=$PATH:$PWD && popd
      install: *build_no_checks
      script: 
        - mvn verify -pl tests/acceptance-test -P vault-acceptance-tests,reduce-logging -o || travis_terminate 1

    - name: "Vault Integration Tests Java 11"
      jdk:  oraclejdk11
      before_install: *install_hashicorp
      install: *build_no_checks
      script: mvn verify -pl tests/acceptance-test -P vault-acceptance-tests,reduce-logging -o || travis_terminate 1
      
    - stage: acceptence_tests
      name: "Quorum acceptence tests Java 8"
      jdk: oraclejdk8
      before_install: &install_gauge_dependencies
        - echo "Install geth"
        - curl -L https://dl.bintray.com/quorumengineering/quorum/v2.3.0/geth_v2.3.0_linux_amd64.tar.gz -o geth.tar.gz
        - tar xvzf geth.tar.gz
        - sudo mv geth /usr/local/bin/
        - geth version
        - echo "Installed geth"
        - echo "Install solc"
        - curl -L https://github.com/ethereum/solidity/releases/download/v0.5.4/solc-static-linux -o solc
        - sudo mv solc /usr/local/bin/
        - sudo chmod 755 /usr/local/bin/solc
        - solc --version
        - echo "Installed solc"
        - echo "Install gauge"
        - curl -L https://github.com/getgauge/gauge/releases/download/v1.0.4/gauge-1.0.4-linux.x86_64.zip -o gauge.zip
        - sudo unzip -o gauge.zip -d /usr/local/bin
        - gauge telemetry off
        - gauge install
        - echo "Installed gauge"
        
      install: *build_no_checks
      script: 
        - git clone https://github.com/jpmorganchase/quorum-examples.git
        - git clone https://github.com/jpmorganchase/quorum-acceptance-tests.git
        - export TESSERA_VERSION=`mvn help:evaluate -Dexpression=project.version -q -DforceStdout`
        - export TESSERA_JAR=$HOME/.m2/repository/com/jpmorgan/quorum/tessera-app/$TESSERA_VERSION/tessera-app-$TESSERA_VERSION-app.jar
        - echo "Start $TESSERA_JAR for 7 nodes"
        - cd quorum-examples/examples/7nodes
        - ./tessera-init.sh
        - ./init.sh istanbul
        - ./start.sh istanbul tessera
        - cd ../../../
        - echo "Started $TESSERA_JAR for 7 nodes"
        - echo "Run quorum-acceptance-tests"
        - cd quorum-acceptance-tests
        - cp config/application-local.7nodes.yml config/application-local.yml 
        - mvn test
        - echo "Complete quorum-acceptance-tests"
        
    - name: "Quorum acceptence tests Java 11"
      jdk: oraclejdk11
      before_install: *install_gauge_dependencies
      install: *build_no_checks
      script: 
        - git clone https://github.com/jpmorganchase/quorum-examples.git
        - git clone https://github.com/jpmorganchase/quorum-acceptance-tests.git
        - export TESSERA_VERSION=`mvn help:evaluate -Dexpression=project.version -q -DforceStdout`
        - export TESSERA_JAR=$HOME/.m2/repository/com/jpmorgan/quorum/tessera-app/$TESSERA_VERSION/tessera-app-$TESSERA_VERSION-jdk11_app.jar
        - echo "Start $TESSERA_JAR for 7 nodes"
        - cd quorum-examples/examples/7nodes
        - ./tessera-init.sh
        - ./init.sh istanbul
        - ./start.sh istanbul tessera
        - cd ../../../
        - echo "Started $TESSERA_JAR for 7 nodes"
        - echo "Run quorum-acceptance-tests"
        - cd quorum-acceptance-tests
        - cp config/application-local.7nodes.yml config/application-local.yml 
        - mvn test
        - echo "Complete quorum-acceptance-tests"

    - stage: tag and deploy
      name: "Tag on GitHub and deploy to OSSRH"
      jdk:  
       - oraclejdk8
       - oraclejdk11
      before_install: &prepare_deploy
        - echo -e "machine github.com\n login $GITHUB_USERNAME\n password $GITHUB_TOKEN" > ~/.netrc
        - head_ref=$(git rev-parse HEAD) || travis_terminate 1
        - branch_ref=$(git rev-parse "$TRAVIS_BRANCH") || travis_terminate 1
        - |
          if [[ $head_ref != $branch_ref ]]; then
            echo "HEAD ref ($head_ref) does not match $TRAVIS_BRANCH ref ($branch_ref).  New commits may have been pushed before the build cloned the repo"
          return 0
          fi
        - export now=`date +%d%m%Y%H%M%S`
        - git checkout -b release-$now
        - mvn --settings .maven.xml build-helper:parse-version versions:set -DnewVersion=\${parsedVersion.majorVersion}.\${parsedVersion.minorVersion}.\${parsedVersion.incrementalVersion}.$now versions:commit -B  || travis_terminate 1
        - export new_version=`mvn help:evaluate -Dexpression=project.version -q -DforceStdout`
        - git add \*/pom.xml || travis_terminate 1
        - git commit -m "Change pom versions to $new_version" || travis_terminate 1
        - export tag_version=tessera-$new_version
        - git tag -a $tag_version -m "Create $tag_version" || travis_terminate 1
       # - git push origin $tag_version || travis_terminate 1
        # check out tag from GitHub, build then deploy to OSSRH
        - echo $GPG_SECRET_KEYS | base64 --decode | gpg --import
        - echo $GPG_OWNERTRUST | base64 --decode | gpg --import-ownertrust
      before_cache:
        - echo "Skip before cache"
        - travis_terminate 0
      script: 
        - echo "Deploying $new_version"
        #- mvn --settings .maven.xml -B deploy -P release,reduce-logging -pl \!tests/acceptance-test -Dorg.slf4j.simpleLogger.log.org.apache.maven.cl‌​i.transfer.Slf4jMave‌​nTransferListener=warn -DskipTests  || travis_terminate 1
        - mvn -v
        - echo "Deployed $new_version"
        - jdk_switcher use oraclejdk11 || travis_terminate 1
        - mvn -v
        - echo "Deploying java 11 jar $new_version"
#        - mvn clean install -Dsilent=true -Dmaven.javadoc.skip=true -pl \!tests/acceptance-test -Dchecksyle.skip=true -Dspotbugs.skip=true -Djacoco.skip=true -B || travis_terminate 1
#        - mvn --settings .maven.xml -B deploy -P release,reduce-logging -pl tessera-dist/tessera-app || travis_terminate 1
        - echo "Deployed java 11 jar $new_version"
        
        - travis_terminate 0

#    - if: branch = travis_changes AND type = push
#      name: "Deploy site"
#      jdk:  oraclejdk8
#      before_install:
#        - echo -e "machine github.com\n  login $CI_USER_TOKEN" > ~/.netrc
#      script:
#          - mvn site-deploy
#      install: echo "install"

sudo: enabled

notifications:
  slack:
    secure: TeWK06kSrpdvMY/TNocbNYy0gJ9+jP9ygjzBtgsMRmm0kbBpzg34eZJyWMU/sf5x6taWAVOGW1jfG4+kfLUqG7CrqcRUihqK3x1DOJQS/BlT2IhJkED4dtwEw7xTkRTxPkghwMAXjJZImnh7ORS1HCJByEs5kedThh/Vr1HDaWJ+KctGLhE3LudyYikxZEWYVbexHZ5o8QbFGwmTYNHLaKAIGZbvt8wDoE+yJOftCqmCh2aJ4YBzYSW9wmxxf3tu75Azni9Am1wiCu+Q5NhljtZwbx6QopkHxbM0DdohOwQQ1g2lPni8dZYdw/obvVQOKLNjkTWU3LvtiWrwiAKp/w5czeL5nkQiFxcAcyTqCRXNh3J1RD1k9H4OBLo2N+5o6dhnNUZt24PZFsNMzR+ygmNq7WvAqQpC5ixppND//8tg25234dXafdL8KmWMFuTepQem2H9Yo8zr16v+VC7MEUyh5ta67xqhFGluIDEySgxMX389r0bU1dXsqhc/K131ty6AcV8FWEGToguvxL+Sj8RhBk5F2B+QOtUzl/5iqlGhqpWcVkoQjiCPJbcLHlHbt6fiUNEpVVjxa2kNrTNZ/5GS6eZoVr5OT1tc3lY5ZUA40yk0Pk63mYB30yMl/wtbbQl/g/0OpcJW20+ZT3971dIt6PMFg3b+n1xSZgTNvIY=

before_cache:
- mvn dependency:purge-local-repository -Dinclude=com.jpmorgan.quorum -DresolutionFuzziness=groupId -Dverbose=true -DreResolve=false

cache:
  directories:
    - "$HOME/.m2"

after_success:
  - bash <(curl -s https://codecov.io/bash)
